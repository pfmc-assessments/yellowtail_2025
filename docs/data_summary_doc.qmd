---
title: "Data summary"
date: today
format: 
  html:
    toc: true
    output-file: "index"
editor: visual
---

```{r opts, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(here)
library(dplyr)
library(ggplot2)
```

This documents data streams for use in the Northern Yellowtail Rockfish stock assessment. These data are NOT final and have NOT been fully QA/QC'ed! They are here for communication with the STAT and other collaborators. It is not official communication of the National Oceanic and Atmospheric Administration or the United States Department of Commerce.

## Commercial landings

```{r, cache=TRUE}
load(here('data/confidential/PacFIN.YTRK.CompFT.09.Oct.2024.RData'))

yt_n_catch <- catch.pacfin |>
  filter(
    AGENCY_CODE == 'W' | AGENCY_CODE == 'O' | COUNTY_NAME == 'DEL NORTE' | COUNTY_NAME == 'HUMBOLDT',
    LANDING_YEAR < 2024
  )

yt_n_catch |>
  group_by(AGENCY_CODE, LANDING_YEAR) |>
  summarise(catch_mt = sum(LANDED_WEIGHT_MTONS)) |>
  ggplot() +
  geom_col(aes(x = LANDING_YEAR, y = catch_mt, fill = AGENCY_CODE)) +
  ggtitle('Commercial landings through 2023')

```

### Washington

```{r}
filter(yt_n_catch, AGENCY_CODE == 'W') |>
  group_by(LANDING_YEAR) |>
  summarise(catch_mt = sum(LANDED_WEIGHT_MTONS)) |>
  knitr::kable(align = 'l', digits = 1)
```

WDFW has alerted the STAT these do not include all tribal catches in recent years. Tribal catches are:

```{r}
filter(yt_n_catch, AGENCY_CODE == 'W', PARTICIPATION_GROUP_NAME == "TREATY INDIAN COMMERCIAL FISHER") |>
  group_by(LANDING_YEAR) |>
  summarise(catch_mt = sum(LANDED_WEIGHT_MTONS)) |>
  knitr::kable(align = 'l', digits = 1)
```

### Oregon

The following values were provided directly to the STAT:
```{r}
or_comm_catch <- readr::read_csv(here("Data/Confidential/Oregon Commercial landings_433_2023.csv"))
or_comm_catch |> 
  group_by(YEAR) |>
  summarise(catch_mt = sum(TOTAL)) |>
  knitr::kable(align = 'l', digits = 1)
```


### California

```{r}
filter(yt_n_catch, AGENCY_CODE == 'C') |>
  group_by(LANDING_YEAR) |>
  summarise(catch_mt = sum(LANDED_WEIGHT_MTONS))  |>
  knitr::kable(align = 'l', digits = 1)
```

Note this is for catch landed into Del Norte and Humboldt counties only.

## At-Sea landings

```{r}
ashop_catch <- readxl::read_excel(here("Data/Confidential/Oken_YLT_Catch data_1976-2023_102824.xlsx"), 
                                  sheet = 'Catch Summary Table')
ashop_catch |>
  mutate(catch_mt = EXPANDED_SumOfEXTRAPOLATED_2SECTOR_WEIGHT_KG / 1000) |>
  select(YEAR, catch_mt) |>
  knitr::kable(align = 'l', digits = 1)
```


## Recreational landings

### Washington

Modern catches:

```{r}
wa_modern <- readr::read_csv(here('Data/Raw_not_confidential/RecFIN_WA_catch_to_2023.csv')) |>
  filter(RECFIN_WATER_AREA_NAME != 'Canada', RECFIN_YEAR < 2023)
wa_modern |> group_by(RECFIN_YEAR) |>
  summarise(Dead_Catch_mt = sum(SUM_TOTAL_MORTALITY_MT))  |>
  knitr::kable(align = 'l', digits = 1)
```

Questions:

1.  There are three values for `RECFIN_WATER_AREA_NAME`: Estuary, Ocean, and Canada. Which should be included? Above table excludes Canada.
2.  2023 has a number of instances where `RECFIN_WEEK` is zero, and one instance where is it missing. In the instance where it is missing, there is no estimate of catch in mt.

Historical catches:

```{r}
wa_historical <- readr::read_csv(here('Data/Raw_not_confidential/WA_historical_rec.csv'))

wa_historical |>
  group_by(RECFIN_YEAR) |>
  summarise(Dead_Catch_num = sum(RETAINED_NUM)) |>
  knitr::kable(align = 'l', digits = 1)
```

### Oregon

The following values were provided directly to the STAT:
```{r}
or_rec_catch <- readr::read_csv(here("Data/Confidential/Oregon Recreational landings_433_2023.csv"))
or_rec_catch |>
  select(Year, Total_MT) |>
  knitr::kable(align = 'l', digits = 1)
```


### California

```{r}
ca_modern <- readr::read_csv(here('Data/Raw_not_confidential/RecFIN_CA_catch_to_2023.csv')) |>
  filter(DISTRICT_NAME == "Redwood (Humboldt County, Except Shelter Cover Area, And Del Norte County)" ) 
ca_modern |>
  group_by(RECFIN_YEAR) |>
  summarise(Dead_Catch_mt = sum(SUM_TOTAL_MORTALITY_MT))  |>
  knitr::kable(align = 'l', digits = 1)
  

```

Note that 2020 proxy catches are missing, and we will need historical recreational catches that are not on RecFIN.

## Length Data

### Commercial

Initial sample sizes after running `PacFIN.Utilities::cleanPacFIN()`:

```{r, cache=TRUE}
load(here('Data/Confidential/PacFIN.YTRK.bds.09.Oct.2024.RData'))
bds_clean <- PacFIN.Utilities::cleanPacFIN(bds.pacfin, verbose = FALSE) 
bds_clean |>
  filter(state == 'WA' | state == 'OR' | PACFIN_GROUP_PORT_CODE == 'CCA' |
           PACFIN_GROUP_PORT_CODE == 'ERA') |>
  filter(year < 2024) |>
  group_by(state, year) |>
  summarise(n_length = sum(!is.na(length))) |>
  tidyr::pivot_wider(names_from = state, values_from = n_length, values_fill = 0) |>
  arrange(year) |>
  knitr::kable(align = 'l', digits = 1)

```

Note that California lengths are not yet available for 2023.

While running `PacFIN.Utilities::cleanPacFIN()`, it noted that 20 Washington ages in 1991 were double read, the second reader was not recorded, the first and second ages differed, and no final age was determined.

### Recreational

STAT is working on it!

### At-Sea
```{r}
ashop_lengths_old <- readxl::read_excel(here("Data/Confidential/Oken_YLT_Length data_1976-2023_102824.xlsx"), 
                                        sheet = "YLT_Length data 1976-1989")
ashop_lengths_new <- suppressWarnings(
  readxl::read_excel(here("Data/Confidential/Oken_YLT_Length data_1976-2023_102824.xlsx"), 
                     sheet = "YLT_Length data1990-2023") # warning is about converting text to numeric
)

bind_rows(ashop_lengths_old, ashop_lengths_new) |>
  group_by(YEAR) |>
  summarise(n_length = sum(FREQUENCY)) |>
  knitr::kable(align = 'l')
```


## Survey data

STAT is working on it!

```{r, eval=FALSE}
yt_survey_bio <- nwfscSurvey::pull_bio(common_name = 'yellowtail rockfish', survey = 'NWFSC.Combo')

yt_survey_bio |>
  filter(!is.na(Otosag_id),
         is.na(Age_years)) |>
  group_by(Year) |>
  summarise(n())

```

